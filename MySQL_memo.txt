[データベース]

○コマンド
・立ち上げとログイン
　→mysql -u root

・CREATE DATABASE データベース名;
  →データベース作成

・SHOW DATABASES;
　→データベース一覧表示

・USE データベース名
　→使用するデータベースの指定

・SELECT DATASE();
　→現在使用しているデータベースを表示

・CREATE TABLE テーブル名(カラム名1 データ型1, カラム名2 データ型2, …);
　→テーブルの作成

・SHOW TABLES;
　→全てのテーブルを表示

()・select * frrom db2.table;
　→他のデータベースにあるテーブルに対して操作

・DESC テーブル名;
  →テーブルのカラム構造の確認

・INSERT INTO テーブル名 VALUES(データ1, データ2, …);
　→テーブルにデータを挿入する

・INSERT INTO テーブル名(カラム名1, カラム名2, …) VALUES(データ1, データ2, …), (データ1, データ2, …), …;
　→カラム名を指定してデータを一度の複数入力する

・SELECT カラム名1, カラム名2, … FROM テーブル名;
　→データの表示

・SELECT * FROM テーブル名;
　→全てのレコードを表示

()・SELECT '文字列';
　→データベースと関係ない値を表示

・CREATE TABLE テーブルB SELECT * FROM テーブルA;
　→テーブルBという名前でテーブルAをコピー
　→カラムの属性の変更あり

・ALTER TABLE テーブル名 MODIFY カラム名 データ型;
　→カラムのデータ型を変更する

・ALTER TABLE テーブル名 ADD カラム名 データ型;
　→カラムの追加

・ALTER TABLE テーブル名 MODIFY カラム名 データ型 FIRST or AFTER カラム名;
　→カラムの順番を変更する

・ALTER TABLE テーブル名 CHANGE 変更前カラム名 変更後カラム名 変更後データ型;
　→カラム名とデータ型の変更

・ALTER TABLE テーブル名 DROP カラム名;
　→カラムの削除

・CREATE TABLE テーブル名(カラム名 データ型 PRIMARY KEY, …);
　→主キーを設定してテーブルを作る

・CREATE TABLE テーブル名(カラム名 データ型 UNIQUE, …);
　→一意キーを設定してテーブルを作る

・CREATE TABLE テーブル名(カラム名 INT AUTO_INCREMENT PRIMARY KEY, …);
　→連続番号機能付きカラムの定義

・ALTER TABLE テーブル名 AUTO_INCREMENT=0;
　→auto_incrementの初期化

・CREATE TABLE テーブル名(カラム名 データ型 DEFAULT 初期値, …);
　→最初からデータが入っているカラムにする

・CREATE INDEX インデックス名 ON テーブル名(カラム名);
  →インデックスの作成

・DROP INDEX インデックス名 ON テーブル名;
　→インデックスの削除

・CREATE TABLE 新規テーブル名 LIKE 元となるテーブル名;
　→テーブルのカラム構造のみコピー

・INSERT INTO テーブル名 SELECT * FROM 元となるテーブル名;
　→他のテーブルのデータをコピーする

・DROP TABLE テーブル名;
　→テーブルを削除する

・DROP TABLE IF EXISTS テーブル名;
　→もしそのテーブル名が存在すればを削除

・DROP DATABASE データベース名;
　→データベースの削除

・DELETE FROM テーブル名;
　→レコードの丸ごと削除

・SELECT カラム名1,カラム名2,カラム名1,カラム名2,カラム名1,カラム名2 FROM テーブル名;
　→同じカラムでも指定された回数表示。この場合は三回ずつ


・SELECT カラム名 AS エイリアス FROM テーブル名;
　→カラム名をエイリアスにする

・SELECT VERSION();
　→MySQLサーバーのバージョンを表示

・SELECT DATABASE();
　→現在使っているデータベースを表示

・SELECT USER();
　→現在のユーザーを表示

・SELECT CHARSET('文字列');
　→引数で指定した文字の文字コード(文字セット)を表示

・SELECT カラム名 FROM テーブル名 LIMIT 表示するレコード数;
　→レコード数を決めて表示する

・SELECT カラム名 FROM テーブル名 WHERE 条件;
　→条件に一致したレコードだけを表示する




○関数

・NOW()
　→入力値にNOW関数をデータとして入れると現在の日時を取得する

・AVG(カラム名)
　→カラム名の平均を返す

・SUM()
　→カラム名の合計を返す

・COUNT()
　→カラム名の個数を返す

・PI()
　→円周率を返す

・CONCAT(カラム名, カラム名, …)
　→文字列を結合する

・SELECT RIGHT(カラム名, 〜) FROM テーブル名;
　→右から〜文字、文字列を取り出す

・SELECT LEFT(カラム名, 〜) FROM テーブル名;
　→左から〜文字、文字列を取り出す

・SELECT SUBSTRING(カラム名, ×, △) FROM テーブル名;
　→(左から)×番目から△個分取り出す

・SELECT REPEAT('繰り返す文字', カラム名) FROM テーブル名;
　→繰り返して表示

・SELECT REVERSE(カラム名) FROM テーブル名;
　→逆さから表示

・SELECT * FROM テーブル名 WHERE LIKE "文字列";
　→テーブルから文字列を含む文字列を抽出(あいまい検索)
　→含まないものは NOT LIKE



○細かい話(仕様)

・10000 = 1E+4
　→数値データの入力

・\' \" \\
　→エスケープ処理

・\と5Cコード

・主キー (Primary key)
　→入力時、NULLや重複を許さない

・一意キー (Unique key)
　→入力時、重複は許さないがNULLは許す

・チューニング
　→(indexなどの機能による)処理効率への対策

・エイリアス
　→選ぶときにカラム名にあだ名、特殊記号を使うときに""

・int型系のデータに対し四則演算可能、もちろんカラム同士の四則演算も可能

・比較演算子 カラム名 <> 〜
　→カラム名の中から〜とは異なる

・比較演算子 カラム名 in (〜, 〜);
　→カラム名の中から、〜or〜

・%「任意の文字列」 _「任意の一文字が該当」
　→ワイルドカード

